---
import { Image } from "astro:assets";
import { getLocalizedSettings } from "@/lib/localization-helpers";

const { header, contacts } = getLocalizedSettings();

const logoPath = header.logo?.imagePath;

const images = import.meta.glob<{ default: ImageMetadata }>(
	"/src/assets/global/**/*.{webp,jpeg,jpg,png,gif,svg}",
);
---

<style>
	.menu-icon {
		position: relative;
		width: 50px;
		height: 50px;
		cursor: pointer;
	}
	.menu-icon .menu-icon__checkbox {
		display: block;
		width: 100%;
		height: 100%;
		position: relative;
		cursor: pointer;
		z-index: 2;
		-webkit-touch-callout: none;
		position: absolute;
		opacity: 0;
	}
	.menu-icon div {
		margin: auto;
		position: absolute;
		top: 0;
		right: 0;
		left: 0;
		bottom: 0;
		width: 22px;
		height: 12px;
	}
	.menu-icon span {
		position: absolute;
		display: block;
		width: 100%;
		height: 2px;
		background-color: var(--bar-bg, #000);
		border-radius: 5rem;
		transition: all 0.2s cubic-bezier(0.1, 0.82, 0.76, 0.965);
	}
	.menu-icon span:first-of-type {
		top: 0;
	}
	.menu-icon span:last-of-type {
		bottom: 0;
	}
	.menu-icon.active span:first-of-type,
	.menu-icon .menu-icon__checkbox:checked + div span:first-of-type {
		transform: rotate(45deg);
		top: 5px;
	}
	.menu-icon.active span:last-of-type,
	.menu-icon .menu-icon__checkbox:checked + div span:last-of-type {
		transform: rotate(-45deg);
		bottom: 5px;
	}
	.menu-icon.active:hover span:first-of-type,
	.menu-icon.active:hover span:last-of-type,
	.menu-icon:hover .menu-icon__checkbox:checked + div span:first-of-type,
	.menu-icon:hover .menu-icon__checkbox:checked + div span:last-of-type {
		width: 22px;
	}
	@media (min-width: 1024px) {
		.menu-icon:hover span:first-of-type {
			width: 26px;
		}
		.menu-icon:hover span:last-of-type {
			width: 12px;
		}
	}
	#navigation {
		pointer-events: none;
	}
	[data-nav-border-reveal] {
		--tw-border-opacity: 0;
	}
	.active-locale {
		font-weight: bolder;
	}
</style>

<style is:global>
	[data-nav-text-reveal] {
		opacity: 0;
	}
	[data-nav-text-reveal] > div {
		position: relative;
		margin: 0;
	}
	.split-parent {
		overflow: hidden;
	}
	.split-child {
		display: inline-block;
	}
</style>

<header class="fixed w-full z-30">
	<div
		class="items-center auto-cols-fr grid-cols-2 lg:grid-cols-2 grid-rows-[auto] justify-between left-0 py-3.5 px-6 lg:px-20 right-0 top-0 grid gap-4"
	>
		<div
			class="items-center flex-wrap justify-start relative flex text-blue-700 z-20"
		>
			<a
				href="/"
				id="header-logo"
				class="text-blue-700 justify-self-start lg:justify-self-center underline inline-block max-w-full"
			>
				<svg version="1.2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 250 250" width="60" height="60">
					<title>light-logo</title>
					<style>
						.s0 { fill: #000000 }
						.s1 { fill: #eb8020 }
					</style>
					<path class="s0 logo-path-mask" d="m36.3 152.1c5.9-22.7 16.7-42.6 34.9-57.7q15.2-12.8 34.9-15.9c9.7-1.5 18.1 1.5 25.3 7.7 3.7 3.3 7.8 4.6 12.5 4.3 12.1-1 24.2-2.2 36.4-3.4 13.5-1.3 27.6-1.3 41.3-0.3-15.3-38.3-52.6-65.4-96.4-65.4-57.3 0-103.7 46.5-103.7 103.8 0 17.9 4.6 34.8 12.6 49.5-0.5-7.2 0.2-14.9 2.2-22.6z"/>
					<path class="s0 logo-path-mask" d="m229 125.2c0-13.2-2.5-25.8-7-37.4-0.2 0-0.5 0-0.8 0.1q-21.3 3.9-42.6 7.9c-5.9 1.1-11.9 2.4-17.9 3.5-5.6 1-11.7 1.5-16.5 5.1-3.8 2.9-5.6 7.2-7.7 11.4-2.2 4.4-4.9 8.4-7.8 12.4-3.1 4.4-8.7 9.8-8 15.7 1 9.5 14.7 13.9 21.7 17.6 14.8 8 22.8 21.3 17.1 38.2-4.6 13.7-13 23.6-25.9 28.9 53.4-4.3 95.4-48.9 95.4-103.4z"/>
					<path class="s1" d="m119.9 98.8c0 4.8-3.9 8.7-8.7 8.7-4.8 0-8.8-3.9-8.8-8.7 0-4.8 4-8.8 8.8-8.8 4.8 0 8.7 4 8.7 8.8z"/>
					<path class="s0 logo-path-mask" fill-rule="evenodd" d="m111.2 109.3c-5.8 0-10.5-4.7-10.5-10.5 0-5.8 4.7-10.6 10.5-10.6 5.8 0 10.5 4.8 10.5 10.6 0 5.8-4.7 10.5-10.5 10.5zm0-17.5c-3.8 0-7 3.1-7 7 0 3.8 3.2 6.9 7 6.9 3.8 0 7-3.1 7-6.9 0-3.9-3.2-7-7-7z"/>
					<path class="s0 logo-path-mask" d="m104.2 122.5h-3.5v-47.4h3.5z"/>
				</svg>
			</a>
		</div>
		<div
			class="col-start-2 hidden lg:flex justify-center items-center h-full"
		>
			<a
				data-company-name
				class="pb-4 group"
				href="/"
			>
				<div
					class="w-20 h-1 bg-slate-200 rounded-full group-hover:bg-slate-600 transition-colors duration-500"
				>
				</div>
			</a>
		</div>
		<div class="justify-self-end col-span-1 row-span-1 z-40 col-start-3">
			<div
				class="items-center justify-center relative flex h-16 lg:w-24 lg:h-24"
			>
				<div class="menu-icon">
					<input
						id="menu-toggle"
						class="menu-icon__checkbox"
						type="checkbox"
					/>
					<div>
						<span></span>
						<span></span>
					</div>
				</div>
			</div>
		</div>
	</div>
	<nav
		id="navigation"
		class="items-center bottom-0 text-sm font-medium justify-center left-0 fixed right-0 top-0 flex h-screen z-30"
	>
		<div
			id="navigation-background"
			class="bg-white w-full h-full absolute top-0 left-0 opacity-0"
		>
		</div>
		<div
			class="items-center font-semibold flex-wrap justify-center flex flex-col overflow-hidden z-20 w-full"
		>
			<div class="flex flex-col items-start md:items-center pt-10">
				{
					header.pages.map((page, index) => (
						<a
							data-nav-item
							href={page.link}
							class="items-center justify-start flex overflow-hidden gap-4 relative pr-10"
						>
							<div
								data-nav-border-reveal
								data-nav-text-reveal
								class="text-black items-center cursor-pointer justify-center pt-1 flex w-9 h-9 border-2 border-black border-solid rounded-full"
							>
								0{index + 1}
							</div>
							<div
								data-nav-text-reveal
								class="cursor-pointer overflow-hidden text-4xl xs:text-5xl md:text-[5.63rem] !leading-[1.15] text-black"
							>
								{page.title}
							</div>
						</a>
					))
				}

			</div>
		</div>
	</nav>
</header>

<script>
	import { gsap } from "gsap";
	import { ScrollTrigger } from "gsap/ScrollTrigger";
	// Uncomment if you have premium version of gsap
	// import { SplitText } from "gsap/SplitText";
	// import { DrawSVGPlugin } from "gsap/DrawSVGPlugin";
	import { BlurPlugin } from "@/utils/gsap-blur";
	import { LifecycleManager } from "@/utils/lifecycle-manager";

	gsap.registerPlugin(
		ScrollTrigger,
		/*SplitText, DrawSVGPlugin,*/
		BlurPlugin,
	);

	const lm = new LifecycleManager();

	lm.onElementLoaded("navigation", (ctx) => {
		ctx?.add(() => {
			gsap.timeline({
				defaults: {
					ease: "power1.inOut",
					stagger: 0.2,
				},
				scrollTrigger: {
					trigger: "body",
					start: "50px",
					toggleActions: "play none none reverse",
				},
			})
				.to("[data-company-name]", { opacity: 0 })
				// .to("header .logo-path-mask", { drawSVG: 0 }, "<")
				.to("header .logo-path-mask", { opacity: 0 }, "<")
				.set("#header-logo", { pointerEvents: "none" });

			const tl = gsap.timeline({
				paused: true,
				defaults: {
					duration: 1,
					ease: "power3.out",
				},
			});

			// const childSplit = new SplitText("[data-nav-text-reveal]", {
			// 	type: "lines",
			// 	linesClass: "split-child",
			// });
			// const parentSplit = new SplitText("[data-nav-text-reveal]", {
			// 	// type: "lines",
			// 	linesClass: "split-parent",
			// });

			tl.set("#navigation", { pointerEvents: "auto" })
				.to("#navigation-background", { opacity: 1 }, "<")
				.to(
					"[data-nav-text-reveal]",
					{ opacity: 1, duration: 0.5, ease: "none" },
					"<=0.5",
				);
			// .from(
			// 	childSplit.lines,
			// 	{
			// 		duration: 1,
			// 		yPercent: 300,
			// 		skewY: 7,
			// 		stagger: 0.02,
			// 	},
			// 	"<",
			// );

			const menuItems = gsap.utils.toArray(
				"[data-nav-item]",
			) as HTMLElement[];

			menuItems.forEach((menuItem) => {
				const menuItemTl = gsap
					.timeline({
						defaults: { duration: 0.4, ease: "none" },
						paused: true,
					})
					.to(menuItem, {
						blur: 2,
					})
					.to(menuItem, {
						blur: 1,
					});
				menuItem.addEventListener("mouseenter", (e) =>
					menuItemTl.play(),
				);
				menuItem.addEventListener("mouseleave", (e) =>
					menuItemTl.pause(0),
				);
			});

			// Get the checkbox
			const menuToggle = document.getElementById("menu-toggle");

			// Add an event listener to the checkbox
			menuToggle?.addEventListener("change", function () {
				if ((this as HTMLInputElement).checked) {
					tl.play();
				} else {
					tl.reverse();
				}
			});
		});
	});
</script>
